---
version: 2
jobs:
  build:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:9

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - run:
          name: Install dependencies.
          command: yarn install -s --no-progress

      - run:
          name: Run Greenkeeper to update lockfile.
          command: yarn run greenkeeper-lockfile-update

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}

      - run:
          name: Compile static site.
          command: yarn build

      - run:
          name: Upload Greenkeeper lockfile.
          command: yarn run greenkeeper-lockfile-upload

      - save_cache:
          paths:
            - public/
          key: public-dir-{{ .Revision }}

      - run:
          name: Compress and package static resources into a tarball.
          command: tar czf "jessestuart_${CIRCLE_BUILD_NUM}.tar.gz" public/

      - store_artifacts:
          path: "jessestuart_${CIRCLE_SHA1}.tar.gz"

  lint:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:9

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - run:
          name: Install dependencies.
          command: yarn install -s --no-progress

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}

      - run:
          name: Run linter.
          command: yarn lint

  test:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:9

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - run:
          name: Install dependencies.
          command: yarn install -s --no-progress

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}

      - run:
          name: Run Jest tests & upload coverage to Codecov.
          command: yarn test:coverage && yarn codecov -t $CODECOV_TOKEN

  # ---------------------------------------------------------------------------

  push_image:
    name: Build and push Docker image to AWS ECR.
    environment:
      # yamllint disable-line
      - IMAGE_ID: "672278003389.dkr.ecr.us-east-1.amazonaws.com/jessestuart/jsgatsby"
    docker:
      - image: docker:18-git
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
            pip install awscli

      - run:
          name: Authenticate with AWS ECR.
          command: |
            eval $(aws ecr get-login --no-include-email --region us-east-1)

      - run:
          name: Build Docker image for static site.
          command: |
            docker build -t "${IMAGE_ID}" .

      - run:
          name: Push image to ECR.
          command: |
            docker tag    "${IMAGE_ID}" "${IMAGE_ID}:circle-${CIRCLE_BUILD_NUM}"
            docker push                 "${IMAGE_ID}:circle-${CIRCLE_BUILD_NUM}"
            if [ "${CIRCLE_BRANCH}" = 'master' ]; then
              docker tag  "${IMAGE_ID}" "${IMAGE_ID}:latest"
              docker push               "${IMAGE_ID}:latest"
            fi

  capture_screenshots:
    name: Capture screenshots using puppeteer.
    docker:
      - image: circleci/node:9-browsers

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - restore_cache:
          key: public-dir-{{ .Revision }}

      - run:
          name: Workaround for GoogleChrome/puppeteer#290
          command: |
            chmod +x .circleci/setup-puppeteer.sh
            .circleci/setup-puppeteer.sh

      - run:
          command: yarn install --no-progress

      - run:
          command: yarn dev
          background: true

      - run:
          command: |
            sleep 20
            yarn test

      - store_artifacts:
          path: test/__snapshots__

workflows:
  version: 2
  main:
    jobs:
      - build
      - lint
      - test
      - push_image:
          requires:
            - build
          filters:
            branches:
              only: master
