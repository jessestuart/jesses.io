version: 2.1

# ====================
# WORKFLOW DECLARATION
# ====================
workflows:
  version: 2
  main:
    jobs:
      - install_dependencies
      - build:
          requires:
            - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - semantic_release:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only:
                - master

# ===================
# Shared definitions.
# ===================
defaults: &defaults
  working_directory: ~/jesses.io
  docker:
    - image: node:11

# ====================
# SHARED JOBS POINTERS
# ====================
restore_cache: &restore_cache
  restore_cache:
    keys:
      - v2-dependencies-{{ checksum "yarn.lock" }}
      - v2-dependencies-

restore_public_dir_cache: &restore_public_dir_cache
  restore_cache:
    paths:
      - v2-public/
    keys:
      - v2-public-dir-{{ .Branch }}-{{ .Revision }}
      - v2-public-dir-{{ .Branch }}
      - v2-public-dir-

save_cache: &save_cache
  save_cache:
    paths:
      - node_modules/
    key: v2-dependencies-{{ checksum "yarn.lock" }}

save_public_dir_cache: &save_public_dir_cache
  save_cache:
    paths:
      - public/
    key: v2-public-dir-{{ .Branch }}-{{ .Revision }}

install_dependencies: &install_dependencies
  run:
    name: Install dependencies.
    command: yarn --silent --no-progress --frozen-lockfile --prefer-offline

semantic_release: &semantic_release
  <<: *defaults
  steps:
    - checkout
    - *restore_cache
    - *install_dependencies
    - run: yarn semantic-release

# ================
# JOB DECLARATIONS
# ================
jobs:
  install_dependencies:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_dependencies
      - *save_cache

  lint:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run linter.
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run Jest tests & collect coverage.
          command: |
            yarn jest --coverage --runInBand --ci
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/js-test-results.xml'
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - run:
          name: Upload results to Codacy.
          command: |
            cat ./test/coverage/lcov.info | yarn codacy-coverage
      - run:
          name: Upload results to Codecov.
          command: |
            yarn codecov

  build:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *restore_public_dir_cache

      - run:
          name: Build static site.
          command: yarn build:ci

      - *save_cache
      - *save_public_dir_cache

  # ---------------------------------------------------------------------------

  push_image:
    docker:
      - image: docker:18-git
    environment:
      IMAGE_ID: 'jessestuart/jesses.io'
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate with Docker Hub.
          command: |
            # Login to Docker Hub.
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin
      - run:
          name: Build Docker image for static site.
          command: |
            docker build -t "${IMAGE_ID}" .
      - run:
          name: Push image to ECR.
          command: |
            DATETIME_TAG="$(date -u +'%Y%m%d')-$(date -u +'%H%M%S')"
            docker tag    "${IMAGE_ID}" "${IMAGE_ID}:${DATETIME_TAG}"
            docker push                 "${IMAGE_ID}:${DATETIME_TAG}"
            if [ "${CIRCLE_BRANCH}" = 'master' ]; then
              docker push "${IMAGE_ID}"
            fi

  semantic_release: *semantic_release

  capture_screenshots:
    docker:
      - image: circleci/node:11-browsers

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
            - dependencies-

      - restore_cache:
          key: public-dir-{{ .Revision }}

      - run:
          name: Workaround for GoogleChrome/puppeteer#290
          command: |
            chmod +x .circleci/setup-puppeteer.sh
            .circleci/setup-puppeteer.sh

      - run:
          command: yarn install --no-progress

      - run:
          command: yarn dev
          background: true

      - run:
          command: |
            sleep 20
            yarn test

      - store_artifacts:
          path: test/__snapshots__
