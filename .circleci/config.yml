version: 2.1

# ====================
# WORKFLOW DECLARATION
# ====================
workflows:
  version: 2
  main:
    jobs:
      - install_dependencies
      - build_initial:
          requires:
            - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - full_build_and_deploy:
          requires:
            - build_initial
            - lint
            - test
          # filters:
          #   branches:
          #     only:
          #       - master
      - semantic_release:
          requires:
            - full_build_and_deploy
          filters:
            branches:
              only:
                - master
      - sentry_release:
          requires:
            - semantic_release
          filters:
            branches:
              only:
                - master

# - cypress_job:
#     requires:
#       - build

# ===================
# Shared definitions.
# ===================
defaults: &defaults
  working_directory: ~/jesses.io
  docker:
    - image: node:13

# ====================
# SHARED JOBS POINTERS
# ====================
restore_cache: &restore_cache
  restore_cache:
    keys:
      - v4-dependencies-{{ checksum "yarn.lock" }}
      - v4-dependencies-

restore_public_dir_cache: &restore_public_dir_cache
  restore_cache:
    keys:
      - v2-public-dir-{{ .Branch }}
      - v2-public-dir-

save_cache: &save_cache
  save_cache:
    paths:
      - node_modules/
    key: v4-dependencies-{{ checksum "yarn.lock" }}

save_public_dir_cache: &save_public_dir_cache
  save_cache:
    paths:
      - public/
      - .cache
    key: v2-public-dir-{{ .Branch }}

save_gatsby_prod_cache: &save_gatsby_prod_cache
  save_cache:
    paths:
      - public/
      - .cache
    key: prod-v1-gatsby-{{ .Branch }}

restore_gatsby_prod_cache: &restore_gatsby_prod_cache
  restore_cache:
    keys:
      - prod-v1-gatsby-{{ .Branch }}

install_dependencies: &install_dependencies
  run:
    name: Install dependencies.
    command: yarn --silent --no-progress --frozen-lockfile --prefer-offline

load_aws_credentials: &load_aws_credentials
  run: |
    mkdir -p ~/.aws
    cat > ~/.aws/credentials \<<EOF
    [default]
    aws_access_key_id = ${AWS_ACCESS_KEY_ID}
    aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
    EOF

semantic_release: &semantic_release
  <<: *defaults
  steps:
    - checkout
    - *restore_cache
    - run: yarn semantic-release

sentry_release: &sentry_release
  <<: *defaults
  steps:
    - checkout
    - run:
        name: Install Sentry CLI.
        command: curl -sL https://sentry.io/get-cli/ | bash
    - run:
        name: Update Sentry release.
        command: ./scripts/update-sentry-release.sh

cypress_job: &cypress_job
  working_directory: ~/jesses.io
  docker:
    # Docker image with Cypress dependencies:
    - image: cypress/base:12.14.0
      environment:
        # (This enables colors in the output)
        TERM: xterm
  steps:
    - checkout
    - *restore_cache
    - *restore_public_dir_cache
    - run:
        command: npx serve public/ -l 8000
        background: true
    - run: yarn cypress install
    - run: yarn cypress run

# ================
# JOB DECLARATIONS
# ================
jobs:
  install_dependencies:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_dependencies
      - *save_cache

  lint:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run linter.
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run Jest tests & collect coverage.
          command: yarn test:ci
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - run:
          name: Upload results to Codecov.
          command: yarn codecov

  build_initial:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *restore_public_dir_cache
      - *install_dependencies
      - *load_aws_credentials
      - run: yarn build:ci
      - *save_cache
      - *save_public_dir_cache

  full_build_and_deploy:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *restore_gatsby_prod_cache
      - *install_dependencies
      - *load_aws_credentials
      - run:
          name: Build static site. (with all image assets)
          command: yarn build:prod
      - *save_cache
      - *save_gatsby_prod_cache
      - run:
          name: Install `netlify-cli`.
          command: yarn global add netlify-cli
      - run:
          command: |
            netlify deploy \
              --dir=public \
              --auth="$NETLIFY_AUTH_TOKEN" \
              --prod

  # ---------------------------------------------------------------------------

  semantic_release: *semantic_release

  sentry_release: *sentry_release

  cypress_job: *cypress_job
  # capture_screenshots:
  #   docker:
  #     - image: circleci/node:12-browsers
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys:
  #           - dependencies-{{ checksum "yarn.lock" }}
  #           - dependencies-
  #     - restore_cache:
  #         key: public-dir-{{ .Revision }}
  #     - run:
  #         name: Workaround for GoogleChrome/puppeteer#290
  #         command: |
  #           chmod +x .circleci/setup-puppeteer.sh
  #           .circleci/setup-puppeteer.sh
  #     - run:
  #         command: yarn install --no-progress
  #     - run:
  #         command: yarn dev
  #         background: true
  #     - run:
  #         command: yarn test
  #     - store_artifacts:
  #         path: test/__snapshots__
