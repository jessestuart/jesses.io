---
version: 2

# ====================
# WORKFLOW DECLARATION
# ====================
workflows:
  version: 2
  main:
    jobs:
      - install_dependencies
      - build:
          requires:
            - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - push_image:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only: master

# ====================
# SHARED JOBS POINTERS
# ====================
restore_cache: &restore_cache
  restore_cache:
    keys:
      - dependencies-{{ checksum ".nvmrc" }}-{{ checksum "package.json" }}
      - dependencies-{{ checksum ".nvmrc" }}

restore_public_dir_cache: &restore_public_dir_cache
  restore_cache:
    paths:
      - public/
    keys:
      - public-dir-{{ .Revision }}
      - public-dir-{{ .Branch }}
      - public-dir-

save_cache: &save_cache
  save_cache:
    paths:
      - node_modules/
    key: dependencies-{{ checksum ".nvmrc" }}-{{ checksum "package.json" }}

save_public_dir_cache: &save_public_dir_cache
  save_cache:
    paths:
      - public/
    key: public-dir-{{ .Branch }}

install_dependencies: &install_dependencies
  run:
    name: Install dependencies.
    command: yarn -s --no-progress

# ================
# JOB DECLARATIONS
# ================
jobs:

  install_dependencies:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:10

    steps:
      - checkout
      - *restore_cache
      - *install_dependencies
      - run:
          name: Run Greenkeeper to update lockfile.
          command: yarn run greenkeeper-lockfile-update
      - *save_cache
      - run:
          name: Upload Greenkeeper lockfile.
          command: yarn run greenkeeper-lockfile-upload

  lint:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:10

    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run linter.
          command: yarn lint

  test:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:10

    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run Jest tests & upload coverage to Codecov.
          command: yarn test:coverage && yarn codecov

  build:
    working_directory: ~/jessestuart
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - *restore_cache
      - *restore_public_dir_cache

      - run:
          name: Build static site.
          command: yarn build:ci

      - *save_cache
      - *save_public_dir_cache

      - run:
          name: Compress and package static resources into a tarball.
          command: tar czf jessestuart.tar.gz public/

      - store_artifacts:
          path: jessestuart.tar.gz

  # ---------------------------------------------------------------------------

  push_image:
    docker:
      - image: docker:18-git
    environment:
      - IMAGE_ID: "jessestuart/jesses.io"
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Authenticate with Docker Hub.
          command: |
            # Login to Docker Hub.
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin

      - run:
          name: Build Docker image for static site.
          command: |
            docker build -t "${IMAGE_ID}" .

      - run:
          name: Push image to ECR.
          command: |
            DATETIME_TAG="$(date -u +'%Y%m%d')-$(date -u +'%H%M%S')"
            docker tag    "${IMAGE_ID}" "${IMAGE_ID}:${DATETIME_TAG}"
            docker push                 "${IMAGE_ID}:${DATETIME_TAG}"
            if [ "${CIRCLE_BRANCH}" = 'master' ]; then
              docker push "${IMAGE_ID}"
            fi

  capture_screenshots:
    docker:
      - image: circleci/node:10-browsers

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-

      - restore_cache:
          key: public-dir-{{ .Revision }}

      - run:
          name: Workaround for GoogleChrome/puppeteer#290
          command: |
            chmod +x .circleci/setup-puppeteer.sh
            .circleci/setup-puppeteer.sh

      - run:
          command: yarn install --no-progress

      - run:
          command: yarn dev
          background: true

      - run:
          command: |
            sleep 20
            yarn test

      - store_artifacts:
          path: test/__snapshots__
